---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ec2-instance
  title: AWS EC2 Instance
  description: Deploy a EC2 instance on AWS using Crossplane
spec:
  owner: user:guest
  type: service
  parameters:
    - title: ArgoCD User-name
      required:
        - user
      properties:
        user:
          title: ArgoCD user-name
          type: string
          description: User-name
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: User Password
      required:
        - Password
      properties:
        Password:
          title: User Password
          type: string
          description: Password
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Fill in some steps
      required:
        - Reponame
      properties:
        Reponame:
          title: App Name
          type: string
          description: Unique name for your app
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a Repo location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: Basic EC2 instance Configuration
      required:
        - name
        - region
        - ami
        - instanceType
        - keyName
      properties:
        name:
          title: Instance Name
          type: string
          description: The name of your EC2 instance
          ui:autofocus: true
        region:
          title: AWS Region
          type: string
          description: The AWS region where the cluster will be deployed
          enum:
            - us-east-1
            - us-west-2
        ami:
          title: ami-image id
          type: string
          description: ami-img id to be used in the instance
          ui:autofocus: true
          enum:
            - ami-06aa3f7caf3a30282
            - ami-03f4878755434977f
            - ami-0cbadfea5b91c0ce1
            - ami-05a5bb48beb785bf1
          enumNames:
            - Ubuntu Server 20.04 LTS (HVM), SSD Volume Type
            - Ubuntu Server 22.04 LTS (HVM), SSD Volume Type
            - Microsoft Windows Server 2019 Base 64-bit (x86)
            - Red Hat Enterprise Linux 9 (HVM), SSD Volume Type 64-bit (x86)
        instanceType:
          title: Instance type
          type: string
          description: The instance type for EC2
          ui:autofocus: true
          enum:
            - t2.small
            - t2.medium
            - t2.large
          enumNames:
            - t2.small(1 CPU, 2 GiB)
            - t2.medium(2 CPU, 4 GiB)
            - t2.large(2 CPU, 8 GiB)
        keyName:
          title: key-pair name
          type: string
          description: The name of the key-pair to be used
          ui:autofocus: true
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}
          region: ${{ parameters.region }}
          ami: ${{ parameters.ami }}
          instanceType: ${{ parameters.instanceType }}
          keyName: ${{ parameters.keyName }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: connect.yml
        repoUrl: github.com?repo=argocd-workflows&owner=vignesh-vicky-tech
        branchOrTagName: main
        workflowInputs:
          name: ${{ parameters.name }}
          Reponame: ${{ parameters.Reponame }}
          instancePublicIP: ${{ parameters.instancePublicIP }}
          user: ${{ parameters.user }}
          Password: ${{ parameters.Password }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
